"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WalletTransaction = exports.TransactionType = exports.Booking = void 0;
var common_constants_1 = require("../common/common-constants");
var Booking = /** @class */ (function () {
    function Booking() {
        this.id = '';
        this.uid = '';
        this.orderId = '';
        this.groundId = '';
        this.slotId = '';
        this.bookedAt = new Date().getTime();
        this.slotTimestamp = 0;
        this.lastUpdated = new Date().getTime();
        this.facilityId = '';
        this.spots = 1;
    }
    return Booking;
}());
exports.Booking = Booking;
var TransactionType;
(function (TransactionType) {
    TransactionType["credit"] = "credit";
    TransactionType["debit"] = "debit";
})(TransactionType = exports.TransactionType || (exports.TransactionType = {}));
var WalletTransaction = /** @class */ (function () {
    function WalletTransaction() {
        this.amount = 0;
        this.type = TransactionType.debit;
        this.createdOn = new Date().getTime();
        this.orderId = '';
        this.uid = '';
        this.transactionFor = ''; // notes for transaction entity
    }
    Object.defineProperty(WalletTransaction.prototype, "_amount", {
        get: function () {
            if (this.amount !== undefined && this.amount !== null && Number(this.amount) >= 0) {
                return this.type === TransactionType.credit ? common_constants_1.Constants.PLUS_SIGN + this.amount : common_constants_1.Constants.MINUS_SIGN + this.amount;
            }
            return common_constants_1.Constants.NOT_AVAILABLE;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WalletTransaction.prototype, "_highlightClass", {
        get: function () {
            return this.type === TransactionType.credit ? 'green-highlight' : 'red-highlight';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WalletTransaction.prototype, "_description", {
        get: function () {
            var message = common_constants_1.Constants.WALLET_TRANSACTION.debit;
            if (this.type === TransactionType.credit) {
                message = common_constants_1.Constants.WALLET_TRANSACTION.credit;
            }
            message += ' ';
            message += this.transactionFor;
            return message;
        },
        enumerable: false,
        configurable: true
    });
    return WalletTransaction;
}());
exports.WalletTransaction = WalletTransaction;
