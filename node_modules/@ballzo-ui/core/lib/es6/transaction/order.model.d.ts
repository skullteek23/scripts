export declare class OrderReturn {
    id: string;
    reason: string;
    oid: string;
    returnCount: number;
    timestamp: number;
    returnMode: string;
}
export interface CheckoutRz {
    key: string;
    amount: number;
    currency: string;
    name: string;
    order_id: string;
    handler: (response: any) => Promise<any>;
    description?: string;
    image?: string;
    partial_payment?: boolean;
    prefill?: {
        name?: string;
        email?: string;
        contact?: string;
        method?: string;
        partial_payment?: boolean;
    };
    notes?: any;
    theme?: {
        hide_topbar?: boolean;
        color?: string;
        backdrop_color?: string;
    };
    modal?: {
        backdropclose?: boolean;
        escape?: boolean;
        handleback?: boolean;
        confirm_close?: boolean;
        ondismiss?: () => {};
        animation?: boolean;
    };
    customer_id?: string;
    timeout?: number;
    remember_customer?: boolean;
    send_sms_hash?: boolean;
    allow_rotation?: boolean;
    retry?: {
        enabled?: boolean;
    };
}
export declare class OrderRz {
    id: string;
    bookingId: string;
    uid: string;
    entity: string;
    amount: number | string;
    amount_paid: number;
    amount_due: number;
    currency: string;
    receipt?: string;
    offer_id?: string | null;
    offers?: {
        [key: string]: string;
    };
    status: 'created' | 'attempted' | 'paid';
    attempts: number;
    notes?: Partial<IOrderNotes>;
    created_at: number;
    get _amount(): number;
    get _created_at(): number;
}
export declare class CancellationBehavior {
    lastCancellationTimestamp: number;
    count: number;
    _updateCancellationCount(): void;
    _resetCount(): void;
}
export interface IOrderNotes {
    cancelled: boolean;
    cancellationReason: string;
}
